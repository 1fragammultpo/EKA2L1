
#ifndef OPCODE
    #define OPCODE(prefix, name, version, val)
#endif

#ifndef OPCODE2
    #define OPCODE2(prefix, name, version1, val1, version2, val2)
#endif

OPCODE2(ws_gc, free, u171, 0, curr, 0)
OPCODE2(ws_gc, active, u171, 1, curr, 1)
OPCODE2(ws_gc, deactive, u171, 2, curr, 2)
OPCODE2(ws_gc, set_clipping_region, u171, 3, curr, 3)
OPCODE2(ws_gc, set_clipping_rect, u171, 4, curr, 4)
OPCODE2(ws_gc, cancel_clipping_region, u171, 5, curr, 5)
OPCODE2(ws_gc, cancel_clipping_rect, u171, 6, curr, 6)
OPCODE2(ws_gc, set_word_justification, u171, 7, curr, 7)
OPCODE2(ws_gc, set_char_justification, u171, 8, curr, 8)
OPCODE2(ws_gc, set_pen_color, u171, 9, curr, 9)
OPCODE2(ws_gc, set_pen_style, u171, 10, curr, 10)
OPCODE2(ws_gc, set_pen_size, u171, 11, curr, 11)
OPCODE2(ws_gc, set_brush_color, u171, 12, curr, 12)
OPCODE2(ws_gc, set_brush_style, u171, 13, curr, 13)
OPCODE2(ws_gc, set_brush_origin, u171, 14, curr, 14)
OPCODE2(ws_gc, use_brush_pattern, u171, 15, curr, 15)
OPCODE2(ws_gc, discard_brush_pattern, u171, 16, curr, 16)
OPCODE2(ws_gc, draw_arc, u171, 17, curr, 17)
OPCODE2(ws_gc, draw_line, u171, 18, curr, 18)
OPCODE2(ws_gc, plot, u171, 19, curr, 19)
OPCODE2(ws_gc, draw_to, u171, 20, curr, 20)
OPCODE2(ws_gc, draw_by, u171, 21, curr, 21)
OPCODE2(ws_gc, draw_poly_line, u171, 22, curr, 22)
OPCODE2(ws_gc, draw_poly_line_continued, u171, 23, curr, 23)

OPCODE2(ws_gc, draw_pie, u171, 24, curr, 24)
OPCODE2(ws_gc, draw_round_rect, u171, 25, curr, 25)
OPCODE2(ws_gc, draw_polygon, u171, 26, curr, 26)
OPCODE2(ws_gc, start_segmented_draw_polygon, u171, 27, curr, 27)
OPCODE2(ws_gc, segmented_draw_polygon_data, u171, 28, curr, 28)
OPCODE2(ws_gc, draw_segmented_polygon, u171, 29, curr, 29)
OPCODE2(ws_gc, draw_bitmap, u171, 30, curr, 30)
OPCODE2(ws_gc, draw_bitmap2, u171, 31, curr, 31)
OPCODE2(ws_gc, draw_bitmacurr, u171, 32, curr, 32)
OPCODE2(ws_gc, draw_bitmap_masked, u171, 33, curr, 33)
OPCODE2(ws_gc, ws_draw_bitmap_masked, u171, 34, curr, 34)
OPCODE2(ws_gc, draw_text, u171, 35, curr, 35)
OPCODE2(ws_gc, draw_text_pointer, u171, 36, curr, 36)
OPCODE(ws_gc, draw_text_in_context_ptr, curr, 37)
OPCODE(ws_gc, draw_text_in_context, curr, 38)
OPCODE2(ws_gc, draw_text_vertical, u171, 37, curr, 39)
OPCODE(ws_gc, draw_text_in_context_vertical, curr, 40)
OPCODE(ws_gc, draw_text_in_context_vertical_ptr, curr, 41)
OPCODE2(ws_gc, draw_text_vertical_ptr, u171, 38, curr, 42)
OPCODE2(ws_gc, draw_box_text_optimised1, u171, 39, curr, 43)
OPCODE2(ws_gc, draw_box_text_optimised2, u171, 40, curr, 44)
OPCODE(ws_gc, draw_box_text_in_context_optimised1, curr, 45)
OPCODE(ws_gc, draw_box_text_in_context_optimised2, curr, 46)
OPCODE2(ws_gc, draw_box_text, u171, 41, curr, 47)
OPCODE(ws_gc, draw_box_text_in_context, curr, 48)
OPCODE2(ws_gc, draw_box_text_ptr, u171, 42, curr, 49)
OPCODE(ws_gc, draw_box_text_in_context_ptr, curr, 50)
OPCODE2(ws_gc, draw_box_text_vertical, u171, 43, curr, 51)
OPCODE(ws_gc, draw_box_text_in_context_vertical, curr, 52)
OPCODE2(ws_gc, draw_box_text_vertical_ptr, u171, 44, curr, 53)
OPCODE(ws_gc, draw_box_text_in_context_vertical_ptr, curr, 54)
OPCODE2(ws_gc, move_by, u171, 45, curr, 55)
OPCODE2(ws_gc, move_to, u171, 46, curr, 56)
OPCODE2(ws_gc, set_origin, u171, 47, curr, 57)
OPCODE2(ws_gc, copy_rect, u171, 48, curr, 58)
OPCODE2(ws_gc, draw_rect, u171, 49, curr, 59)
OPCODE2(ws_gc, draw_ellipse, u171, 50, curr, 60)

OPCODE2(ws_gc, gdi_blt2, u171, 51, curr, 61)
OPCODE2(ws_gc, gdi_blt3, u171, 52, curr, 62)
OPCODE2(ws_gc, gdi_blt_masked, u171, 53, curr, 63)
OPCODE2(ws_gc, gdi_ws_blt2, u171, 54, curr, 64)
OPCODE2(ws_gc, gdi_ws_blt3, u171, 55, curr, 65)
OPCODE2(ws_gc, gdi_ws_blt_masked, u171, 56, curr, 66)
OPCODE2(ws_gc, size, u171, 57, curr, 67)
OPCODE2(ws_gc, use_font, u171, 58, curr, 68)
OPCODE2(ws_gc, unk_op1, u171, 59, curr, 69)
OPCODE2(ws_gc, unk_op2, u171, 60, curr, 70)
OPCODE2(ws_gc, discard_font, u171, 61, curr, 71)
OPCODE2(ws_gc, set_underline_style, u171, 62, curr, 72)
OPCODE2(ws_gc, set_strikethrough_style, u171, 63, curr, 73)
OPCODE2(ws_gc, set_draw_mode, u171, 64, curr, 74)
OPCODE2(ws_gc, test_invariant, u171, 65, curr, 75)
OPCODE2(ws_gc, clear_rect, u171, 66, curr, 76)
OPCODE2(ws_gc, clear, u171, 67, curr, 77)
OPCODE2(ws_gc, reset, u171, 68, curr, 78)
OPCODE2(ws_gc, set_dither_origin, u171, 69, curr, 79)
OPCODE2(ws_gc, map_colors, u171, 70, curr, 80)
OPCODE2(ws_gc, draw_ws_graphic, u171, 71, curr, 81)
OPCODE2(ws_gc, draw_ws_graphic_ptr, u171, 72, curr, 82)

// Extension opcodes
OPCODE2(ws_gc, set_faded, u171, 200, curr, 200)
OPCODE2(ws_gc, set_fade_params, u171, 201, curr, 201)
OPCODE2(ws_gc, gdi_alpha_blend_bitmaps, u171, 202, curr, 202)
OPCODE2(ws_gc, gdi_ws_alpha_blend_bitmaps, u171, 203, curr, 203)
OPCODE2(ws_gc, set_opaque, u171, 204, curr, 204)
OPCODE2(ws_gc, set_shadow_color, u171, 207, curr, 207)
OPCODE(ws_gc, set_draw_text_in_context, curr, 208)
OPCODE(ws_gc, draw_resource_to_pos, curr, 209)
OPCODE(ws_gc, draw_resource_to_rect, curr, 210)
OPCODE(ws_gc, draw_resource_from_rect_to_rect, curr, 211)
OPCODE(ws_gc, draw_resource_with_data, curr, 212)